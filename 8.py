import tkinter as tk
from tkinter import messagebox
import requests

API_KEY = '5f3c2746c90c6047f3b76f0b171b7f52'

def get_weather():
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ –£–ª—å—è–Ω–æ–≤—Å–∫–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –µ–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.
    """
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q=Ulyanovsk,RU&appid={API_KEY}&units=metric"
        response = requests.get(url)
        data = response.json()

        if response.status_code == 200:
            city = data['name']
            temperature = data['main']['temp']
            weather_description = data['weather'][0]['description']
            messagebox.showinfo("–ü–æ–≥–æ–¥–∞ –≤ –£–ª—å—è–Ω–æ–≤—Å–∫–µ", f"–ì–æ—Ä–æ–¥: {city}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C –û–ø–∏—Å–∞–Ω–∏–µ: {weather_description}")
        else:
            raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.")
    except Exception as e:
        messagebox.showwarning("–û—à–∏–±–∫–∞", str(e))

def perform_operation(operation):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏—é –Ω–∞–¥ –¥–≤—É–º—è —á–∏—Å–ª–∞–º–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    operation (str): –û–ø–µ—Ä–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å ('Addition', 'Subtraction', 'Multiplication', 'Division').
    """
    try:
        num1 = float(entry_num1.get())
        num2 = float(entry_num2.get())

        if operation == 'Addition':
            result = num1 + num2
        elif operation == 'Subtraction':
            result = num1 - num2
        elif operation == 'Multiplication':
            result = num1 * num2
        elif operation == 'Division':
            if num2 != 0:
                result = num1 / num2
            else:
                raise ZeroDivisionError

        messagebox.showinfo("–†–µ–∑—É–ª—å—Ç–∞—Ç", f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    except ValueError:
        messagebox.showwarning("–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–∞")
    except ZeroDivisionError:
        messagebox.showwarning("–û—à–∏–±–∫–∞", "–î–µ–ª–∏—Ç—å –Ω–∞ 0 –Ω–µ–ª—å–∑—è")

def clear_entries():
    """
    –û—á–∏—â–∞–µ—Ç –ø–æ–ª—è –≤–≤–æ–¥–∞, —É–¥–∞–ª—è—è –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω—ã–µ.
    """
    entry_num1.delete(0, tk.END)
    entry_num2.delete(0, tk.END)

# –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
window = tk.Tk()
window.title("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ü–æ–≥–æ–¥—ã")
window.configure(bg="#eaeaea")

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –æ–∫–Ω–∞
window.geometry("500x500")  # –®–∏—Ä–∏–Ω–∞ x –í—ã—Å–æ—Ç–∞
window.resizable(False, False)  # –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞

# –ù–∞–¥–ø–∏—Å–∏ –∏ –ø–æ–ª—è –≤–≤–æ–¥–∞
label_num1 = tk.Label(window, text="–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ:", bg="#eaeaea", font=("Arial", 14))
label_num1.pack(pady=(20, 10))

entry_num1 = tk.Entry(window, font=("Arial", 14), borderwidth=3, relief="flat")
entry_num1.pack(pady=5)

label_num2 = tk.Label(window, text="–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ:", bg="#eaeaea", font=("Arial", 14))
label_num2.pack(pady=(20, 10))

entry_num2 = tk.Entry(window, font=("Arial", 14), borderwidth=3, relief="flat")
entry_num2.pack(pady=5)

# –ö–Ω–æ–ø–∫–∏ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –∏–∫–æ–Ω–∫–∞–º–∏
button_weather = tk.Button(window, text="üå§ –ü–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É", command=get_weather, bg="#4CAF50", fg="white", font=("Arial", 12), width=25, height=2)
button_weather.pack(pady=15)

button_add = tk.Button(window, text="‚ûï –°–ª–æ–∂–µ–Ω–∏–µ", command=lambda: perform_operation("Addition"), bg="#2196F3", fg="white", font=("Arial", 12), width=20, height=2)
button_add.pack(pady=5)

button_subtract = tk.Button(window, text="‚ûñ –í—ã—á–∏—Ç–∞–Ω–∏–µ", command=lambda: perform_operation("Subtraction"), bg="#F44336", fg="white", font=("Arial", 12), width=20, height=2)
button_subtract.pack(pady=5)

button_multiply = tk.Button(window, text="‚úñ –£–º–Ω–æ–∂–µ–Ω–∏–µ", command=lambda: perform_operation("Multiplication"), bg="#FFA500", fg="white", font=("Arial", 12), width=20, height=2)
button_multiply.pack(pady=5)

button_divide = tk.Button(window, text="‚ûó –î–µ–ª–µ–Ω–∏–µ", command=lambda: perform_operation("Division"), bg="#FF9800", fg="white", font=("Arial", 12), width=20, height=2)
button_divide.pack(pady=5)

# –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
button_clear = tk.Button(window, text="üóë –û—á–∏—Å—Ç–∏—Ç—å", command=clear_entries, bg="#9E9E9E", fg="white", font=("Arial", 12), width=20, height=2)
button_clear.pack(pady=15)

window.mainloop()
